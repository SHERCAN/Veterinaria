// <auto-generated />
using System;
using ClinicaVeterinaria.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicaVeterinaria.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210926235803_Entidades2")]
    partial class Entidades2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Anotacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaMedicamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuxiliarId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoriaClinica");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DueñoId")
                        .HasColumnType("int");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeAnimal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DueñoId");

                    b.ToTable("Mascota");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Administrador", b =>
                {
                    b.HasBaseType("ClinicaVeterinaria.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("ClinicaVeterinaria.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Dueño", b =>
                {
                    b.HasBaseType("ClinicaVeterinaria.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Dueño");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("ClinicaVeterinaria.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Consulta", b =>
                {
                    b.HasOne("ClinicaVeterinaria.App.Dominio.Auxiliar", "Auxiliar")
                        .WithMany()
                        .HasForeignKey("AuxiliarId");

                    b.HasOne("ClinicaVeterinaria.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId");

                    b.Navigation("Auxiliar");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ClinicaVeterinaria.App.Dominio.Mascota", b =>
                {
                    b.HasOne("ClinicaVeterinaria.App.Dominio.Dueño", "Dueño")
                        .WithMany()
                        .HasForeignKey("DueñoId");

                    b.Navigation("Dueño");
                });
#pragma warning restore 612, 618
        }
    }
}
